version: "3"

volumes:
  ckan_storage:
  pg_data:
  solr_data:

services:

  ckan-dev:
    platform: linux/amd64
    container_name: ${CKAN_CONTAINER_NAME}
    build:
      context: ckan/
      dockerfile: Dockerfile.dev
      args:
        - TZ=${TZ}
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "0.0.0.0:${CKAN_PORT_HOST}:${CKAN_PORT}"
    stdin_open: true
    tty: true
    volumes:
      - ckan_storage:/var/lib/ckan
      - ./src:/srv/app/src_extensions
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000"]
    
  datapusher:
    container_name: ${DATAPUSHER_CONTAINER_NAME}
    # Official image:
    #image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}

    # Custom build image:
    build:
      context: datapusher/
      #dockerfile: Dockerfile.official-git
      dockerfile: Dockerfile.fri-mdp-git
      args:
        - DATAPUSHER_VERSION=${DATAPUSHER_VERSION}
        - TZ=${TZ}
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8800"]

  db:
    container_name: ${POSTGRESQL_CONTAINER_NAME}
    build:
      context: postgresql/
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - CKAN_DB_USER
      - CKAN_DB_PASSWORD
      - CKAN_DB
      - DATASTORE_READONLY_USER
      - DATASTORE_READONLY_PASSWORD
      - DATASTORE_DB
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
     
  solr:
    platform: linux/amd64
    container_name: ${SOLR_CONTAINER_NAME}
    image: ckan/ckan-solr:${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:${REDIS_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]

  fuseki:
    container_name: fuseki
    image: secoresearch/fuseki
    ports:
      - "3030:3030"
    environment:
      - ADMIN_PASSWORD=pz
      - ENABLE_DATA_WRITE=true
      - ENABLE_UPDATE=true
      - ENABLE_UPLOAD=true
    volumes:
      - ./volumes/fuseki/configuration:/fuseki-base/configuration/
      - ./volumes/fuseki/databases:/fuseki-base/databases/